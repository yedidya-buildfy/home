rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own profile, and read others for lookups
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Home documents
    match /homes/{homeId} {
      // Members can read their home
      allow read: if request.auth != null && 
        request.auth.uid in resource.data.members;
      
      // Admin can update home, members can add themselves
      allow write: if request.auth != null && 
        (request.auth.uid == resource.data.adminId ||
         (request.auth.uid in request.resource.data.members && 
          request.auth.uid in resource.data.members));
      
      // Anyone can create a home (they become admin)
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.adminId &&
        request.resource.data.members.size() >= 1 &&
        request.auth.uid in request.resource.data.members;
    }

    // Invites - for invitation system (simplified for debugging)
    match /invites/{inviteId} {
      // Allow all authenticated users to read/write invites for now
      allow read, write: if request.auth != null;
    }

    // Attendance - only members of the home can read/write
    match /attendance/{homeId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/homes/$(homeId)) &&
        request.auth.uid in get(/databases/$(database)/documents/homes/$(homeId)).data.members;
      
      match /weeks/{weekId} {
        allow read, write: if request.auth != null && 
          exists(/databases/$(database)/documents/homes/$(homeId)) &&
          request.auth.uid in get(/databases/$(database)/documents/homes/$(homeId)).data.members;
      }
    }

    // Groceries - only members of the home can read/write
    match /groceries/{homeId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/homes/$(homeId)) &&
        request.auth.uid in get(/databases/$(database)/documents/homes/$(homeId)).data.members;
      
      match /items/{itemId} {
        allow read, write: if request.auth != null && 
          exists(/databases/$(database)/documents/homes/$(homeId)) &&
          request.auth.uid in get(/databases/$(database)/documents/homes/$(homeId)).data.members;
      }
    }
  }
}